{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Configure new Tailwind Config file Vite": {
    "prefix": "tailwind_config_js_vite",
    "body": [
      "/** @type {import('tailwindcss').Config} */",
      "export default {",
      "  content: [\"./index.html\", \"./src/**/*.{js,ts,jsx,tsx,html}\"],",
      "  mode: \"jit\",",
      "  theme: {",
      "    extend: {",
      "      colors: {",
      "        background: \"#f5f5f5\",",
      "        text: \"#333\",",
      "        primaryLight: \"#e3f2fd\",",
      "        primary: \"#90caf9\",",
      "        primaryDark: \"#42a5f5\",",
      "        secondaryLight: \"#f3e5f5\",",
      "        secondary: \"#ce93d8\",",
      "        secondaryDark: \"#ab47bc\",",
      "        errorLight: \"#e57373\",",
      "        error: \"#f44336\",",
      "        errorDark: \"#d32f2f\",",
      "        warningLight: \"#ffb74d\",",
      "        warning: \"#ffa726\",",
      "        warningDark: \"#f57c00\",",
      "        infoLight: \"#4fc3f7\",",
      "        info: \"#29b6f6\",",
      "        infoDark: \"#0288d1\",",
      "        successLight: \"#81c784\",",
      "        success: \"#66bb6a\",",
      "        successDark: \"#388e3c\",",
      "      }",
      "    }",
      "  },",
      "  plugins: [],",
      "};"
    ],
    "description": "Configure new Tailwind Config file Vite"
  },
  "Configure new Tailwind Config file NextJS": {
    "prefix": "tailwind_config_js_nextjs",
    "body": [
      "/** @type {import('tailwindcss').Config} */",
      "module.export = {",
      "  content: [",
      "    \"./pages/**/*.{js,ts,jsx,tsx,mdx}\",",
      "    \"./components/**/*.{js,ts,jsx,tsx,mdx}\",",
      "    \"./app/**/*.{js,ts,jsx,tsx,mdx}\",",
      "  ],",
      "  theme: {",
      "    extend: {",
      "      colors: {",
      "        background: \"#f5f5f5\",",
      "        text: \"#333\",",
      "        primaryLight: \"#e3f2fd\",",
      "        primary: \"#90caf9\",",
      "        primaryDark: \"#42a5f5\",",
      "        secondaryLight: \"#f3e5f5\",",
      "        secondary: \"#ce93d8\",",
      "        secondaryDark: \"#ab47bc\",",
      "        errorLight: \"#e57373\",",
      "        error: \"#f44336\",",
      "        errorDark: \"#d32f2f\",",
      "        warningLight: \"#ffb74d\",",
      "        warning: \"#ffa726\",",
      "        warningDark: \"#f57c00\",",
      "        infoLight: \"#4fc3f7\",",
      "        info: \"#29b6f6\",",
      "        infoDark: \"#0288d1\",",
      "        successLight: \"#81c784\",",
      "        success: \"#66bb6a\",",
      "        successDark: \"#388e3c\",",
      "      }",
      "    }",
      "  },",
      "  plugins: [],",
      "};"
    ],
    "description": "Configure new Tailwind Config file NextJS"
  },
  "React Vite Tailwind Gitignore": {
    "prefix": "rv-gitignore",
    "body": [
      "# Logs",
      "logs",
      "*.log",
      "npm-debug.log*",
      "yarn-debug.log*",
      "yarn-error.log*",
      "pnpm-debug.log*",
      "lerna-debug.log*",
      "",
      "# Dependencies and build artifacts",
      "node_modules/",
      "dist/",
      "dist-ssr/",
      "*.local",
      "",
      "# Editor directories and files",
      ".vscode/*",
      "!.vscode/extensions.json",
      ".idea",
      ".DS_Store",
      "*.suo",
      "*.ntvs*",
      "*.njsproj",
      "*.sln",
      "*.sw",
      "",
      "# Ignore any md file that is not README.md",
      "*.md",
      "!README.md"
    ],
    "description": "React Vite Tailwind Gitignore"
  },
  "Configure new Index CSS file": {
    "scope": "css",
    "prefix": "index_css",
    "body": [
      "@tailwind base;",
      "@tailwind components;",
      "@tailwind utilities;",
      "",
      "@layer components {",
      "  .layout {",
      "    @apply max-w-6xl w-11/12 mx-auto flex flex-col;",
      "  }",
      "}"
    ],
    "description": "Configure new Index CSS file"
  },
  "Configure new Vite Config file": {
    "scope": "javascript",
    "prefix": "vite_config_js",
    "body": [
      "import { defineConfig } from \"vite\";",
      "import react from \"@vitejs/plugin-react-swc\";",
      "  ",
      "// https://vitejs.dev/config/  ",
      "export default defineConfig({  ",
      "  plugins: [react()],  ",
      "  server: {",
      "    port: 3000,",
      "  },  ",
      "  base: \"/${TM_DIRECTORY/^.+[\\/\\\\](.*)$/$1/}/\",",
      "});  "
    ],
    "description": "Configure new Vite Config file"
  },
  "Configure new Vite Config file with TS": {
    "scope": "typescript",
    "prefix": "vite_config_ts",
    "body": [
      "import { defineConfig } from \"vite\";",
      "import react from \"@vitejs/plugin-react-swc\";",
      "  ",
      "// https://vitejs.dev/config/",
      "export default defineConfig({",
      "  plugins: [react()],",
      "  server: {",
      "    port: 3000,",
      "  },  ",
      "  base: \"/${TM_DIRECTORY/^.+[\\/\\\\](.*)$/$1/}/\",",
      "});  "
    ],
    "description": "Configure new Vite Config file with TS"
  },
  "Add Deploy to package.json": {
    "scope": "json",
    "prefix": "deploy_package_json",
    "body": [
      "\"predeploy\": \"npm run build\",",
      "\"deploy\": \"gh-pages -d dist\","
    ],
    "description": "Configure new Vite Config file"
  },
  "Change the default Index HTML": {
    "scope": "html",
    "prefix": "change_default_index_html",
    "body": [
      "<!DOCTYPE html>",
      "<html lang=\"en\">",
      "  <head>",
      "    <meta charset=\"UTF-8\" />",
      "    <link rel=\"icon\" type=\"image/png\" href=\"/logo.png\" />",
      "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />",
      "    <title>${1:${TM_DIRECTORY/^.+[\\/\\\\](.*)$/$1/}}</title>",
      "  </head>",
      "  <body>",
      "    <div id=\"root\"></div>",
      "    <script type=\"module\" src=\"/src/main.jsx\"></script>",
      "  </body>",
      "</html>"
    ],
    "description": "Configure new Index HTML file"
  },
  "Readme Template": {
    "scope": "markdown",
    "prefix": "readme_template",
    "body": [
      "<a name=\"readme-top\"></a>",
      "",
      "<div align=\"center\">",
      "  <a href=\"https://github.com/seesmof/\">",
      "    <img src=\"./public/logo.png\" alt=\"Logo\" height=\"80\">",
      "  </a>",
      "",
      "<h1 align=\"center\">${1:${TM_DIRECTORY/^.+[\\/\\\\](.*)$/$1/}}</h1>",
      "</div>",
      "",
      "## Table of contents",
      "",
      "- [Table of contents](#table-of-contents)",
      "- [About](#about)",
      "- [Screenshots](#screenshots)",
      "- [Built with](#built-with)",
      "- [Links](#links)",
      "- [License](#license)",
      "",
      "## About",
      "",
      "This repository contains ${2:}. Made with ${3:React, TailwindCSS and NextJS}. Fully functional, fully responsive.",
      "",
      "## Screenshots",
      "",
      "![The app in mobile view](./public/mobile.png)",
      "",
      "![The app in desktop view](./public/desktop.png)",
      "",
      "## Built with",
      "",
      "![React](https://img.shields.io/badge/react-%2320232a.svg?style=for-the-badge&logo=react&logoColor=%2361DAFB)",
      "",
      "![TailwindCSS](https://img.shields.io/badge/tailwindcss-%2338B2AC.svg?style=for-the-badge&logo=tailwind-css&logoColor=white)",
      "",
      "![Next JS](https://img.shields.io/badge/Next-black?style=for-the-badge&logo=next.js&logoColor=white)",
      "",
      "## Links",
      "",
      "- [Live Preview](https://seesmof.github.io/${TM_DIRECTORY/^.+[\\/\\\\](.*)$/$1/}/)",
      "- [Icon](https://www.flaticon.com/free-icons/)",
      "",
      "## License",
      "",
      "This project is licensed under the [MIT License](./LICENSE).",
      "",
      "<p align=\"right\"><a href=\"#readme-top\"><strong>Back to top</strong></a></p>"
    ],
    "description": "Add boilerplate for a README file"
  },
  "React Router Template": {
    "prefix": "app_jsx_react",
    "body": [
      "import { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';",
      "import Home from './pages/Home';",
      "import NotFound from './pages/NotFound';",
      "",
      "function App() {",
      "  return (",
      "    <Router>",
      "      <Routes>",
      "        <Route path='/' element={<Home />} />",
      "        <Route path='*' element={<Navigate to='/404' />} />",
      "        <Route path='/404' element={<NotFound />} />",
      "      </Routes>",
      "    </Router>",
      "  );",
      "}",
      "",
      "export default App;"
    ],
    "description": "React Router App.jsx template"
  },
  "React NotFound Component": {
    "prefix": "not_found_jsx_react",
    "body": [
      "import { Link } from 'react-router-dom';",
      "",
      "const NotFound = () => {",
      "  return (",
      "    <>",
      "      <div className='h-screen flex flex-col max-w-xl mx-auto w-full justify-center text-center p-4'>",
      "        <h1 className='font-bold text-4xl mb-3'>Ooops...</h1>",
      "        <p className='text-slate-700 mb-12'>",
      "          The page you are looking for does not exist",
      "        </p>",
      "        <Link",
      "          to='/'",
      "          className='w-full py-3 bg-black hover:bg-stone-800 text-white font-medium text-center'",
      "        >",
      "          Take Me Back",
      "        </Link>",
      "      </div>",
      "    </>",
      "  );",
      "};",
      "",
      "export default NotFound"
    ],
    "description": "React NotFound.jsx page component template"
  },
  "React Home": {
    "prefix": "home_jsx_react",
    "body": [
      "import { Link } from 'react-router-dom';",
      "",
      "const Home = () => {",
      "  return (",
      "    <>",
      "      <div className='h-screen overflow-scroll bg-background'>",
      "        <div className='flex flex-col container mx-auto max-w-4xl p-4'>",
      "          <h1 className='font-medium text-xl'>Home</h1>",
      "        </div>",
      "      </div>",
      "    </>",
      "  );",
      "};",
      "",
      "export default Home;"
    ],
    "description": "React Home Component"
  }
}
